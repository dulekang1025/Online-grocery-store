<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pika.Onlinegrocerystore.dao.ICustomerDao">
<!--    todo-->

    <resultMap id="customerMap" type="Customer">
        <id property="id" column="id"></id>
        <!--  property is attributes in classï¼Œ column is in database -->
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="email" column="email"></result>
        <result property="role" column="role"></result>
        <result property="birthday" column="birthday"></result>
<!--        <result property="address" column="address"></result>-->
<!--        <result property="postCode" column="postCode"></result>-->
<!--        <result property="creditNum" column="creditNum"></result>-->
        <result property="phoneNum" column="phone_num"></result>
        <result property="points" column="points"></result>

    </resultMap>

    <select id="findAll" resultMap="customerMap">
        select * from customerTable;
    </select>

    <insert id="saveCustomer" parameterType="Customer">
        <selectKey keyProperty="id" keyColumn="id" resultType="java.lang.Long" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into customerTable(username, password, email, birthday, phone_num, points)
        values(#{username}, #{password}, #{email}, #{birthday}, #{phoneNum}, #{points});
    </insert>

    <update id="updateCustomer" parameterType="java.lang.Long">
        update customerTable set username=#{username}, password=#{password}, email=#{email},
        birthday=#{birthday}, phone_num=#{phoneNum}, point=#{point} where id=#{id};
    </update>

    <delete id="deleteCustomer" parameterType="java.lang.Long">
        delete from customerTable where id=#{id};
    </delete>

    <select id="findCustomerById" parameterType="java.lang.Long" resultMap="customerMap">
        select * from customerTable where id=#{id};
    </select>

    <select id="findCustomerByName" parameterType="String" resultMap="customerMap">
        select * from customerTable where username like #{username};
    </select>

</mapper>